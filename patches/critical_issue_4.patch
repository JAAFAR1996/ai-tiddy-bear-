--- a/src/infrastructure/di/container.py
+++ b/src/infrastructure/di/container.py
@@ -79,10 +79,9 @@
     service_factory = providers.Singleton(ServiceFactory, settings=settings)
 
     # Database session factory
-    # Assuming service_factory.provided.create_database returns a database manager
-    # that has a method 'get_session' which returns a new session.
-    # We use providers.Callable to ensure it's treated as a factory.
-    # This ensures that a new session is created each time it's called.
-    db_session_factory = providers.Callable(service_factory.provided.create_database().get_session)
+    # We use providers.Factory to ensure a new session is created each time it's called.
+    database_manager = providers.Singleton(service_factory.provided.create_database)
+    db_session_factory = providers.Factory(database_manager.provided.get_session)
 
     redis_cache = providers.Singleton(
         RedisCache,

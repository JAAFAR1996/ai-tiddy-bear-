--- a/src/main.py
+++ b/src/main.py
@@ -149,8 +149,14 @@
         logger.info("Production mode: binding to all interfaces for deployment")
 
     # Define port constants for Uvicorn's internal validation
-    DEFAULT_PORT = 8000
-    DEV_PORT_MIN = 3000
-    DEV_PORT_MAX = 9999
-    PROD_PORT_MIN = 8000
-    PROD_PORT_MAX = 65535
+    DEFAULT_PORT = 8000
+    DEV_PORT_MIN = 3000
+    DEV_PORT_MAX = 9999
+    PROD_PORT_MIN = 8000
+    PROD_PORT_MAX = 65535
+
+    # Define Uvicorn server constants
+    UVICORN_BACKLOG = 2048
+    UVICORN_KEEPALIVE_TIMEOUT = 60
+    UVICORN_MAX_REQUESTS = 1000
+    UVICORN_MAX_REQUESTS_JITTER = 50
+    UVICORN_DEV_WORKERS = 1
+    UVICORN_PROD_WORKERS_DEFAULT = 4
 
     # Validate port range with stricter limits
     try:
@@ -220,9 +226,9 @@
         # SSL configuration for production
         **uvicorn_ssl_args,
         # Additional security
-        workers=1 if is_development else int(os.getenv("WORKERS", "4")),
-        backlog=2048,  # Connection backlog
-        keepalive_timeout=60,  # Keep-alive timeout
-        max_requests=1000 if not is_development else None,  # Worker recycling
-        max_requests_jitter=50 if not is_development else None,
+        workers=UVICORN_DEV_WORKERS if is_development else int(os.getenv("WORKERS", str(UVICORN_PROD_WORKERS_DEFAULT))),
+        backlog=UVICORN_BACKLOG,  # Connection backlog
+        keepalive_timeout=UVICORN_KEEPALIVE_TIMEOUT,  # Keep-alive timeout
+        max_requests=UVICORN_MAX_REQUESTS if not is_development else None,  # Worker recycling
+        max_requests_jitter=UVICORN_MAX_REQUESTS_JITTER if not is_development else None,
     )
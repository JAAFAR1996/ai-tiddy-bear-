from dataclasses import dataclassfrom typing import Optionalfrom uuid import UUIDtry:    from pydantic import BaseModelexcept ImportError as e:    raise ImportError("Pydantic is required for production validation - install with: pip install pydantic") from e@dataclassclass ESP32Request:    """    Represents a request from an ESP32 device containing child interaction data.    Supports multiple input types including audio, text, and sensor data while    maintaining COPPA compliance and child safety requirements.    Attributes:        child_id: Unique identifier for the child using the device        audio_data: Optional audio data from device microphone        language_code: Optional language preference for response        text_input: Optional text input for testing/debugging    """    child_id: UUID    audio_data: Optional[bytes] = None    language_code: Optional[str] = None    text_input: Optional[str] = None
# AI Teddy Bear - Production Nginx Configuration
# High-performance, secure reverse proxy for child safety application

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    # ================================
    # Basic Configuration
    # ================================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Character Set
    charset utf-8;
    
    # ================================
    # Performance Optimization
    # ================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    
    # Buffer Sizes
    client_body_buffer_size 128k;
    client_max_body_size 10m;  # For file uploads
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # ================================
    # Security Headers (Child Safety)
    # ================================
    # Remove server tokens for security
    server_tokens off;
    
    # Security headers for child protection
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), speaker=()" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;
    
    # Content Security Policy for child safety
    add_header Content-Security-Policy "
        default-src 'self';
        script-src 'self' 'unsafe-inline' 'unsafe-eval';
        style-src 'self' 'unsafe-inline';
        img-src 'self' data: https:;
        font-src 'self';
        connect-src 'self';
        media-src 'self';
        object-src 'none';
        child-src 'none';
        frame-src 'none';
        worker-src 'none';
        frame-ancestors 'none';
        form-action 'self';
        upgrade-insecure-requests;
    " always;
    
    # ================================
    # SSL/TLS Configuration
    # ================================
    # SSL Protocols and Ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_ecdh_curve secp384r1;
    
    # SSL Session Configuration
    ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Certificate Configuration (to be mounted)
    ssl_certificate /etc/nginx/ssl/aiteddy.crt;
    ssl_certificate_key /etc/nginx/ssl/aiteddy.key;
    ssl_trusted_certificate /etc/nginx/ssl/aiteddy-chain.crt;
    
    # ================================
    # Compression
    # ================================
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        image/svg+xml;
    
    # ================================
    # Rate Limiting (Child Safety)
    # ================================
    # Define rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;
    
    # ================================
    # Logging Configuration
    # ================================
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    log_format security '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'blocked="$limit_req_status"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # ================================
    # Upstream Backend Configuration
    # ================================
    upstream ai_teddy_backend {
        least_conn;
        server ai-teddy-backend:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # ================================
    # Server Blocks
    # ================================
    
    # HTTP to HTTPS Redirect
    server {
        listen 80;
        server_name aiteddybear.com www.aiteddybear.com api.aiteddybear.com;
        
        # Security headers even for redirects
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        
        # Redirect all HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    # Main HTTPS Server
    server {
        listen 443 ssl http2;
        server_name aiteddybear.com www.aiteddybear.com api.aiteddybear.com;
        
        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/aiteddy.crt;
        ssl_certificate_key /etc/nginx/ssl/aiteddy.key;
        
        # HSTS (HTTP Strict Transport Security)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # Rate Limiting
        limit_req zone=api burst=20 nodelay;
        limit_conn perip 10;
        limit_conn perserver 100;
        
        # ================================
        # Health Check Endpoint
        # ================================
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # ================================
        # API Endpoints
        # ================================
        location /api/ {
            # Enhanced rate limiting for API
            limit_req zone=api burst=10 nodelay;
            
            # Proxy configuration
            proxy_pass http://ai_teddy_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer configuration
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            
            # Child safety: block certain user agents
            if ($http_user_agent ~* (bot|crawler|spider|scraper)) {
                return 403 "Access denied";
            }
        }
        
        # ================================
        # Authentication Endpoints
        # ================================
        location /api/v1/auth/ {
            # Stricter rate limiting for auth
            limit_req zone=auth burst=5 nodelay;
            
            # Proxy to backend
            proxy_pass http://ai_teddy_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Enhanced security for auth endpoints
            proxy_hide_header X-Powered-By;
            proxy_hide_header Server;
            
            # Log security events
            access_log /var/log/nginx/auth.log security;
        }
        
        # ================================
        # File Upload Endpoints
        # ================================
        location /api/v1/upload/ {
            # Rate limiting for uploads
            limit_req zone=upload burst=3 nodelay;
            
            # File size limit (10MB for child safety)
            client_max_body_size 10m;
            
            # Proxy configuration
            proxy_pass http://ai_teddy_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout for file uploads
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # ================================
        # WebSocket Support
        # ================================
        location /ws/ {
            # Rate limiting for WebSocket connections
            limit_req zone=api burst=5 nodelay;
            
            # WebSocket proxy configuration
            proxy_pass http://ai_teddy_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific settings
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }
        
        # ================================
        # Static Files (if needed)
        # ================================
        location /static/ {
            alias /app/static/;
            expires 30d;
            add_header Cache-Control "public, no-transform";
            
            # Security for static files
            location ~* \.(php|jsp|cgi|asp|aspx)$ {
                deny all;
            }
        }
        
        # ================================
        # Documentation (disabled in production)
        # ================================
        location /docs {
            return 404;
        }
        
        location /redoc {
            return 404;
        }
        
        # ================================
        # Security Blocks
        # ================================
        # Block access to sensitive files
        location ~* \.(htaccess|htpasswd|ini|log|sh|sql|conf|bak)$ {
            deny all;
        }
        
        # Block access to hidden files
        location ~ /\. {
            deny all;
        }
        
        # Block common attack patterns
        location ~* (eval\(|base64_decode|gzinflate|preg_replace|exec\(|shell_exec) {
            deny all;
        }
        
        # Block SQL injection attempts
        if ($args ~* "(\<|%3C).*script.*(\>|%3E)") {
            return 403;
        }
        if ($args ~* "(union|select|insert|delete|update|drop|create|alter)" ) {
            return 403;
        }
        
        # ================================
        # Default Location
        # ================================
        location / {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            
            # Proxy to backend
            proxy_pass http://ai_teddy_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Default timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }
    
    # ================================
    # Status and Monitoring Server
    # ================================
    server {
        listen 8080;
        server_name localhost;
        
        # Nginx status for monitoring
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.20.0.0/16;  # Docker network
            deny all;
        }
        
        # Health check for load balancer
        location /lb_health {
            access_log off;
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }
    }
}

# ================================
# Production Security Notes
# ================================
# 1. TLS 1.3 enabled with secure ciphers
# 2. HSTS with preload for security
# 3. Comprehensive security headers for child safety
# 4. Rate limiting on all endpoints
# 5. Content Security Policy configured
# 6. Static file security hardening
# 7. SQL injection and XSS protection
# 8. WebSocket support with security
# 9. File upload size limits
# 10. Monitoring and health checks
 
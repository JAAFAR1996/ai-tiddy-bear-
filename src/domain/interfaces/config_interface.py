"""from abc import ABC, abstractmethodfrom typing import Any, Optional"""Configuration Interface for Domain LayerThis interface provides access to configuration without infrastructure dependencies."""class ConfigInterface(ABC):    """Interface for configuration services."""    @abstractmethod    def get(self, key: str, default: Any = None) -> Any:        """Get configuration value by key."""        pass    @abstractmethod    def get_bool(self, key: str, default: bool = False) -> bool:        """Get boolean configuration value."""        pass    @abstractmethod    def get_int(self, key: str, default: int = 0) -> int:        """Get integer configuration value."""        pass    @abstractmethod    def get_str(self, key: str, default: str = "") -> str:        """Get string configuration value."""        pass
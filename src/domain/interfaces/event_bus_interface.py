"""from abc import ABC, abstractmethodfrom typing import Anyfrom src.domain.events.base_event import DomainEvent"""Event Bus Interface for Domain LayerThis interface defines event publishing without infrastructure dependencies."""class EventBusInterface(ABC):    """Interface for event bus implementations."""    @abstractmethod    async def publish(self, event: DomainEvent) -> None:        """Publish domain event."""        pass    @abstractmethod    async def subscribe(self, event_type: str, handler) -> None:        """Subscribe to domain events."""        pass
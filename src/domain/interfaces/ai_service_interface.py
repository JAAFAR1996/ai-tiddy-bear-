"""from abc import ABC, abstractmethodfrom typing import Dict, Any, Optional"""AI Service Interface for Domain LayerThis interface defines the contract for AI services without creatingdependencies on infrastructure implementations."""class AIServiceInterface(ABC):    """Interface for AI service implementations."""    @abstractmethod    async def generate_response(        self,        prompt: str,        child_context: Dict[str, Any],        safety_level: str = "strict"    ) -> Dict[str, Any]:        """        Generate AI response for child interaction.        Args:            prompt: Child's input prompt            child_context: Context about the child (age, preferences, etc.)            safety_level: Safety filtering level        Returns:            Dictionary with response and safety metrics        """        pass    @abstractmethod    async def assess_content_safety(self, content: str) -> Dict[str, Any]:        """        Assess content safety for COPPA compliance.        Args:            content: Content to assess        Returns:            Safety assessment with score and recommendations        """        pass